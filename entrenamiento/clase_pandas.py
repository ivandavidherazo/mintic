# -*- coding: utf-8 -*-
"""clase_pandas

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JAehdSysCrqS41rseVYud9Ko8NKKeiq1
"""

import pandas as pd
#create a data set
#let´s built the values lists

value_n_list = ["Andrew", 'Phillip', "john", 'Karol', 'Valentina', 'Mario', 'Camilo', 'Carlos', 'Ivan', 'Alejandra']
#print(value_n_list)

value_w_list = [50, 70, 91.5, 60.5, 25.8, 87.4, 73.4, 67.5, 80.4, 79.5] #[kg]
value_h_list = [1.76, 1.87, 1.69, 1.6, 1.25, 1.82, 1.68, 1.6, 1.75, 1.68] #[m]

#value_bmi_list will be calculate: bmi = w/(h^2)
value_bmi_list =[25, 25, 25, 25, 25, 25, 25, 25, 25, 25] #init values [kg/m^2]

#let's use a dictionary ({key:value})
#with the format {"str", list}
data_dict = {"name": value_n_list,
             "weight": value_w_list,
             "height": value_h_list,
             "bmi": value_bmi_list,}
#print(data_dict)
#turn a dictionary into a dataframe

df = pd.DataFrame(data_dict)
#print(df)
#call a variable
df
df['bmi'] = df['weight']/(df['height']**2)

# Función para clasificar el BMI
def clasificar_bmi(bmi):
    if bmi < 18.5:
        return 'Bajo peso'
    elif 18.5 <= bmi < 25:
        return 'Normal'
    elif 25 <= bmi < 30:
        return 'Sobrepeso'
    elif 30 <= bmi < 40:
        return 'Obesidad'
    else:
        return 'Obesidad mórbida'

# Crear nueva columna con la clasificación del BMI
df['bmi_categoria'] = df['bmi'].apply(clasificar_bmi)

# Mostrar el resultado
#print(df)
df